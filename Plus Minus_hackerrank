#Given an array of integers, calculate the fractions of its elements that are positive, negative, and are zeros.
#Print the decimal value of each fraction on a new line.
#Note: This challenge introduces precision problems. The test cases are scaled to six decimal places, 
#though answers with absolute error of up to  are acceptable.
#For example, given the array  there are  elements, two positive, two negative and one zero. Their ratios would be ,  and . 
#It should be printed as

#Function Description

#Complete the plusMinus function in the editor below. 
#It should print out the ratio of positive, negative and zero items in the array, each on a separate line rounded to six decimals.
#plusMinus has the following parameter(s):
#arr: an array of integers

#Output Format

#You must print the following  lines:
#A decimal representing of the fraction of positive numbers in the array compared to its size.
#A decimal representing of the fraction of negative numbers in the array compared to its size.
#A decimal representing of the fraction of zeros in the array compared to its size.

#!/bin/python3

import sys
from decimal import *

n = int(input().strip())
arr = [int(arr_temp) for arr_temp in input().strip().split(' ')]

numOfPositives = 0
numOfNegatives = 0
numOfZeros = 0

for integer in arr:
    if (integer > 0):
        numOfPositives = numOfPositives + 1

    elif (integer < 0):
        numOfNegatives = numOfNegatives + 1

    else:
        numOfZeros = numOfZeros + 1

fractionOfPositives = Decimal(numOfPositives) / Decimal(n)
fractionOfPositivesWithPrecision = format(fractionOfPositives, '.6f')
print(fractionOfPositivesWithPrecision)

fractionOfNegatives = Decimal(numOfNegatives) / Decimal(n)
fractionOfNegativesWithPrecision = format(fractionOfNegatives, '.6f')
print(fractionOfNegativesWithPrecision)

fractionOfZeros = Decimal(numOfZeros) / Decimal(n)
fractionOfZerosWithPrecision = format(fractionOfZeros, '.6f')
print(fractionOfZerosWithPrecision)
